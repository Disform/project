
            //#region Функции
//Главная цель Функицй - избавление дублирования кода
//они так же являются обьектами поэтому могут быть вызваны по ссылке внутри обьекта

        //#region Виды функций

//Есть 4 вида функций

// первый  - function declaration

// это когда функция обьявленая в основном потоке кода и выглядит она следующим образом:
function q (a, b) {
    return a + b;
}
// подобная функция может быть аналогично var вызвана до обьявления (так называемый hoisting)


//второй -  function expression

// Ещё называют функциональным выражением
// обьявляется в контексте какого либо выражение и выглядит следующим образом:
let q1 = function (a,b) {
    return a + b;
};

// визуально разница лишь в том, что она сразу присваивается к какой-то переменной, однако
// не может вызываться до её обьявления


//третий - NFE named function expression 

// Смесь первого и второго метода вызова функции, выглядит следующим образом:
let q2 = function w (a,b) {

};
// имя функционального выражения W имеет особый смысл оно доступно только изнутри самой функции
// используется обычно только с одной целью - позволить изнутри функции вызвать саму себя.
// внутренее имя позволяет функции надежно обращаться к самой себе где бы она не находилась
// и предназначается для надежного рекурсивного вызова функции, даже если она записана в другую переменную


// четвёртый - стрелочная функция

// прямой аналог function expression сравним их следующим образом:
let q4 = function (a,b) {
    return a + b;
};
// выглядят по разному, но работают они одинаково
let q5 = (a, b) => {
    return a + b;
};

//#endregion Виды функций

        //#region  Рекурсия

// Реурсия - это когда функиця вызывает саму себя
// пример использования рекурсии через функциональное выражен
let q3 = function w (n) {
    return n ? n * w(n - 1) : 1;
}
q3(1);
//#endregion

    //#region Контекст использования This
                                                                                //#endregion Контекст использования This
    //#region local и global области видимости
                                                                        //#endregion local и global области видимости
//#endregion Функции